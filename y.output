Terminals unused in grammar

    LT
    LE
    GT
    GE
    EQ
    NE
    PLUS
    MINUS
    OR
    STAR
    SLASH
    DIV
    MOD
    AND
    FUNCTION_CALL
    ARRAY_ACCESS
    LIST


State 92 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: DEF ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    2 identifier_list: ID
    3                | identifier_list ',' ID

    4 declarations: declarations VAR identifier_list ':' type ';'
    5             | %empty

    6 type: standard_type
    7     | ARRAY '[' range ']' OF standard_type

    8 range: INUM '.' '.' INUM

    9 standard_type: INTEGRAL
   10              | RATIONAL

   11 subprogram_declarations: subprogram_declarations subprogram_declaration ';'
   12                        | %empty

   13 subprogram_declaration: subprogram_header declarations subprogram_declarations compound_statement

   14 subprogram_header: FUNC ID arguments ':' standard_type ';'

   15 $@1: %empty

   16 subprogram_header: PROC ID $@1 arguments ';'

   17 arguments: '(' parameter_list ')'
   18          | %empty

   19 parameter_list: identifier_list ':' type
   20               | parameter_list ';' identifier_list ':' type

   21 compound_statement: BBEGIN optional_statements END

   22 optional_statements: statement_list
   23                    | %empty

   24 statement_list: statement
   25               | statement_list ';' statement

   26 statement: matched_statement
   27          | unmatched_statement

   28 matched_statement: IF expression THEN matched_statement ELSE matched_statement
   29                  | variable ASSIGNOP expression
   30                  | procedure_statement
   31                  | compound_statement
   32                  | WHILE expression DO statement

   33 unmatched_statement: IF expression THEN statement
   34                    | IF expression THEN matched_statement ELSE unmatched_statement

   35 variable: ID
   36         | ID '[' expression ']'

   37 procedure_statement: ID
   38                    | ID '(' expression_list ')'

   39 expression_list: expression
   40                | expression_list ',' expression

   41 expression: simple_expression
   42           | simple_expression RELOP simple_expression

   43 simple_expression: term
   44                  | ADDOP term
   45                  | simple_expression ADDOP term

   46 term: factor
   47     | term MULOP factor

   48 factor: ID
   49       | ID '(' expression_list ')'
   50       | ID '[' expression ']'
   51       | INUM
   52       | RNUM
   53       | '(' expression ')'
   54       | NOT factor


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 1 17 38 49 53
    ')' (41) 1 17 38 49 53
    ',' (44) 3 40
    '.' (46) 1 8
    ':' (58) 4 14 19 20
    ';' (59) 1 4 11 14 16 20 25
    '[' (91) 7 36 50
    ']' (93) 7 36 50
    error (256)
    DEF (258) 1
    VAR (259) 4
    ARRAY (260) 7
    OF (261) 7
    INTEGRAL (262) 9
    RATIONAL (263) 10
    BBEGIN (264) 21
    END (265) 21
    ASSIGNOP (266) 29
    FUNC (267) 14
    PROC (268) 16
    IF (269) 28 33 34
    THEN (270) 28 33 34
    ELSE (271) 28 34
    WHILE (272) 32
    DO (273) 32
    RELOP <opval> (274) 42
    LT (275)
    LE (276)
    GT (277)
    GE (278)
    EQ (279)
    NE (280)
    ADDOP <opval> (281) 44 45
    PLUS (282)
    MINUS (283)
    OR (284)
    MULOP <opval> (285) 47
    STAR (286)
    SLASH (287)
    DIV (288)
    MOD (289)
    AND (290)
    NOT (291) 54
    FUNCTION_CALL (292)
    ARRAY_ACCESS (293)
    LIST (294)
    ID <sval> (295) 1 2 3 14 16 35 36 37 38 48 49 50
    INUM <ival> (296) 8 51
    RNUM <rval> (297) 52


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    program (52)
        on left: 1
        on right: 0
    identifier_list <tval> (53)
        on left: 2 3
        on right: 1 3 4 19 20
    declarations (54)
        on left: 4 5
        on right: 1 4 13
    type <ival> (55)
        on left: 6 7
        on right: 4 19 20
    range (56)
        on left: 8
        on right: 7
    standard_type <ival> (57)
        on left: 9 10
        on right: 6 7 14
    subprogram_declarations (58)
        on left: 11 12
        on right: 1 11 13
    subprogram_declaration (59)
        on left: 13
        on right: 11
    subprogram_header (60)
        on left: 14 16
        on right: 13
    $@1 (61)
        on left: 15
        on right: 16
    arguments (62)
        on left: 17 18
        on right: 14 16
    parameter_list <tval> (63)
        on left: 19 20
        on right: 17 20
    compound_statement <tval> (64)
        on left: 21
        on right: 1 13 31
    optional_statements <tval> (65)
        on left: 22 23
        on right: 21
    statement_list <tval> (66)
        on left: 24 25
        on right: 22 25
    statement <tval> (67)
        on left: 26 27
        on right: 24 25 32 33
    matched_statement <tval> (68)
        on left: 28 29 30 31 32
        on right: 26 28 34
    unmatched_statement <tval> (69)
        on left: 33 34
        on right: 27 34
    variable <tval> (70)
        on left: 35 36
        on right: 29
    procedure_statement <tval> (71)
        on left: 37 38
        on right: 30
    expression_list <tval> (72)
        on left: 39 40
        on right: 38 40 49
    expression <tval> (73)
        on left: 41 42
        on right: 28 29 32 33 34 36 39 40 50 53
    simple_expression <tval> (74)
        on left: 43 44 45
        on right: 41 42 45
    term <tval> (75)
        on left: 46 47
        on right: 43 44 45 47
    factor <tval> (76)
        on left: 48 49 50 51 52 53 54
        on right: 46 47 54


State 0

    0 $accept: . program $end

    DEF  shift, and go to state 1

    program  go to state 2


State 1

    1 program: DEF . ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: DEF ID . '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    '('  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: DEF ID '(' . identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 6

    identifier_list  go to state 7


State 6

    2 identifier_list: ID .

    $default  reduce using rule 2 (identifier_list)


State 7

    1 program: DEF ID '(' identifier_list . ')' ';' declarations subprogram_declarations compound_statement '.'
    3 identifier_list: identifier_list . ',' ID

    ')'  shift, and go to state 8
    ','  shift, and go to state 9


State 8

    1 program: DEF ID '(' identifier_list ')' . ';' declarations subprogram_declarations compound_statement '.'

    ';'  shift, and go to state 10


State 9

    3 identifier_list: identifier_list ',' . ID

    ID  shift, and go to state 11


State 10

    1 program: DEF ID '(' identifier_list ')' ';' . declarations subprogram_declarations compound_statement '.'

    $default  reduce using rule 5 (declarations)

    declarations  go to state 12


State 11

    3 identifier_list: identifier_list ',' ID .

    $default  reduce using rule 3 (identifier_list)


State 12

    1 program: DEF ID '(' identifier_list ')' ';' declarations . subprogram_declarations compound_statement '.'
    4 declarations: declarations . VAR identifier_list ':' type ';'

    VAR  shift, and go to state 13

    $default  reduce using rule 12 (subprogram_declarations)

    subprogram_declarations  go to state 14


State 13

    4 declarations: declarations VAR . identifier_list ':' type ';'

    ID  shift, and go to state 6

    identifier_list  go to state 15


State 14

    1 program: DEF ID '(' identifier_list ')' ';' declarations subprogram_declarations . compound_statement '.'
   11 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'

    BBEGIN  shift, and go to state 16
    FUNC    shift, and go to state 17
    PROC    shift, and go to state 18

    subprogram_declaration  go to state 19
    subprogram_header       go to state 20
    compound_statement      go to state 21


State 15

    3 identifier_list: identifier_list . ',' ID
    4 declarations: declarations VAR identifier_list . ':' type ';'

    ','  shift, and go to state 9
    ':'  shift, and go to state 22


State 16

   21 compound_statement: BBEGIN . optional_statements END

    BBEGIN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    ID      shift, and go to state 25

    $default  reduce using rule 23 (optional_statements)

    compound_statement   go to state 26
    optional_statements  go to state 27
    statement_list       go to state 28
    statement            go to state 29
    matched_statement    go to state 30
    unmatched_statement  go to state 31
    variable             go to state 32
    procedure_statement  go to state 33


State 17

   14 subprogram_header: FUNC . ID arguments ':' standard_type ';'

    ID  shift, and go to state 34


State 18

   16 subprogram_header: PROC . ID $@1 arguments ';'

    ID  shift, and go to state 35


State 19

   11 subprogram_declarations: subprogram_declarations subprogram_declaration . ';'

    ';'  shift, and go to state 36


State 20

   13 subprogram_declaration: subprogram_header . declarations subprogram_declarations compound_statement

    $default  reduce using rule 5 (declarations)

    declarations  go to state 37


State 21

    1 program: DEF ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement . '.'

    '.'  shift, and go to state 38


State 22

    4 declarations: declarations VAR identifier_list ':' . type ';'

    ARRAY     shift, and go to state 39
    INTEGRAL  shift, and go to state 40
    RATIONAL  shift, and go to state 41

    type           go to state 42
    standard_type  go to state 43


State 23

   28 matched_statement: IF . expression THEN matched_statement ELSE matched_statement
   33 unmatched_statement: IF . expression THEN statement
   34                    | IF . expression THEN matched_statement ELSE unmatched_statement

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 50
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 24

   32 matched_statement: WHILE . expression DO statement

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 54
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 25

   35 variable: ID .
   36         | ID . '[' expression ']'
   37 procedure_statement: ID .
   38                    | ID . '(' expression_list ')'

    '('  shift, and go to state 55
    '['  shift, and go to state 56

    ASSIGNOP  reduce using rule 35 (variable)
    $default  reduce using rule 37 (procedure_statement)


State 26

   31 matched_statement: compound_statement .

    $default  reduce using rule 31 (matched_statement)


State 27

   21 compound_statement: BBEGIN optional_statements . END

    END  shift, and go to state 57


State 28

   22 optional_statements: statement_list .
   25 statement_list: statement_list . ';' statement

    ';'  shift, and go to state 58

    $default  reduce using rule 22 (optional_statements)


State 29

   24 statement_list: statement .

    $default  reduce using rule 24 (statement_list)


State 30

   26 statement: matched_statement .

    $default  reduce using rule 26 (statement)


State 31

   27 statement: unmatched_statement .

    $default  reduce using rule 27 (statement)


State 32

   29 matched_statement: variable . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 59


State 33

   30 matched_statement: procedure_statement .

    $default  reduce using rule 30 (matched_statement)


State 34

   14 subprogram_header: FUNC ID . arguments ':' standard_type ';'

    '('  shift, and go to state 60

    $default  reduce using rule 18 (arguments)

    arguments  go to state 61


State 35

   16 subprogram_header: PROC ID . $@1 arguments ';'

    $default  reduce using rule 15 ($@1)

    $@1  go to state 62


State 36

   11 subprogram_declarations: subprogram_declarations subprogram_declaration ';' .

    $default  reduce using rule 11 (subprogram_declarations)


State 37

    4 declarations: declarations . VAR identifier_list ':' type ';'
   13 subprogram_declaration: subprogram_header declarations . subprogram_declarations compound_statement

    VAR  shift, and go to state 13

    $default  reduce using rule 12 (subprogram_declarations)

    subprogram_declarations  go to state 63


State 38

    1 program: DEF ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.' .

    $default  reduce using rule 1 (program)


State 39

    7 type: ARRAY . '[' range ']' OF standard_type

    '['  shift, and go to state 64


State 40

    9 standard_type: INTEGRAL .

    $default  reduce using rule 9 (standard_type)


State 41

   10 standard_type: RATIONAL .

    $default  reduce using rule 10 (standard_type)


State 42

    4 declarations: declarations VAR identifier_list ':' type . ';'

    ';'  shift, and go to state 65


State 43

    6 type: standard_type .

    $default  reduce using rule 6 (type)


State 44

   44 simple_expression: ADDOP . term

    NOT   shift, and go to state 45
    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    term    go to state 66
    factor  go to state 53


State 45

   54 factor: NOT . factor

    NOT   shift, and go to state 45
    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    factor  go to state 67


State 46

   48 factor: ID .
   49       | ID . '(' expression_list ')'
   50       | ID . '[' expression ']'

    '('  shift, and go to state 68
    '['  shift, and go to state 69

    $default  reduce using rule 48 (factor)


State 47

   51 factor: INUM .

    $default  reduce using rule 51 (factor)


State 48

   52 factor: RNUM .

    $default  reduce using rule 52 (factor)


State 49

   53 factor: '(' . expression ')'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 70
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 50

   28 matched_statement: IF expression . THEN matched_statement ELSE matched_statement
   33 unmatched_statement: IF expression . THEN statement
   34                    | IF expression . THEN matched_statement ELSE unmatched_statement

    THEN  shift, and go to state 71


State 51

   41 expression: simple_expression .
   42           | simple_expression . RELOP simple_expression
   45 simple_expression: simple_expression . ADDOP term

    RELOP  shift, and go to state 72
    ADDOP  shift, and go to state 73

    $default  reduce using rule 41 (expression)


State 52

   43 simple_expression: term .
   47 term: term . MULOP factor

    MULOP  shift, and go to state 74

    $default  reduce using rule 43 (simple_expression)


State 53

   46 term: factor .

    $default  reduce using rule 46 (term)


State 54

   32 matched_statement: WHILE expression . DO statement

    DO  shift, and go to state 75


State 55

   38 procedure_statement: ID '(' . expression_list ')'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression_list    go to state 76
    expression         go to state 77
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 56

   36 variable: ID '[' . expression ']'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 78
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 57

   21 compound_statement: BBEGIN optional_statements END .

    $default  reduce using rule 21 (compound_statement)


State 58

   25 statement_list: statement_list ';' . statement

    BBEGIN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    ID      shift, and go to state 25

    compound_statement   go to state 26
    statement            go to state 79
    matched_statement    go to state 30
    unmatched_statement  go to state 31
    variable             go to state 32
    procedure_statement  go to state 33


State 59

   29 matched_statement: variable ASSIGNOP . expression

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 80
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 60

   17 arguments: '(' . parameter_list ')'

    ID  shift, and go to state 6

    identifier_list  go to state 81
    parameter_list   go to state 82


State 61

   14 subprogram_header: FUNC ID arguments . ':' standard_type ';'

    ':'  shift, and go to state 83


State 62

   16 subprogram_header: PROC ID $@1 . arguments ';'

    '('  shift, and go to state 60

    $default  reduce using rule 18 (arguments)

    arguments  go to state 84


State 63

   11 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'
   13 subprogram_declaration: subprogram_header declarations subprogram_declarations . compound_statement

    BBEGIN  shift, and go to state 16
    FUNC    shift, and go to state 17
    PROC    shift, and go to state 18

    subprogram_declaration  go to state 19
    subprogram_header       go to state 20
    compound_statement      go to state 85


State 64

    7 type: ARRAY '[' . range ']' OF standard_type

    INUM  shift, and go to state 86

    range  go to state 87


State 65

    4 declarations: declarations VAR identifier_list ':' type ';' .

    $default  reduce using rule 4 (declarations)


State 66

   44 simple_expression: ADDOP term .
   47 term: term . MULOP factor

    MULOP  shift, and go to state 74

    $default  reduce using rule 44 (simple_expression)


State 67

   54 factor: NOT factor .

    $default  reduce using rule 54 (factor)


State 68

   49 factor: ID '(' . expression_list ')'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression_list    go to state 88
    expression         go to state 77
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 69

   50 factor: ID '[' . expression ']'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 89
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 70

   53 factor: '(' expression . ')'

    ')'  shift, and go to state 90


State 71

   28 matched_statement: IF expression THEN . matched_statement ELSE matched_statement
   33 unmatched_statement: IF expression THEN . statement
   34                    | IF expression THEN . matched_statement ELSE unmatched_statement

    BBEGIN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    ID      shift, and go to state 25

    compound_statement   go to state 26
    statement            go to state 91
    matched_statement    go to state 92
    unmatched_statement  go to state 31
    variable             go to state 32
    procedure_statement  go to state 33


State 72

   42 expression: simple_expression RELOP . simple_expression

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    simple_expression  go to state 93
    term               go to state 52
    factor             go to state 53


State 73

   45 simple_expression: simple_expression ADDOP . term

    NOT   shift, and go to state 45
    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    term    go to state 94
    factor  go to state 53


State 74

   47 term: term MULOP . factor

    NOT   shift, and go to state 45
    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    factor  go to state 95


State 75

   32 matched_statement: WHILE expression DO . statement

    BBEGIN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    ID      shift, and go to state 25

    compound_statement   go to state 26
    statement            go to state 96
    matched_statement    go to state 30
    unmatched_statement  go to state 31
    variable             go to state 32
    procedure_statement  go to state 33


State 76

   38 procedure_statement: ID '(' expression_list . ')'
   40 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 97
    ','  shift, and go to state 98


State 77

   39 expression_list: expression .

    $default  reduce using rule 39 (expression_list)


State 78

   36 variable: ID '[' expression . ']'

    ']'  shift, and go to state 99


State 79

   25 statement_list: statement_list ';' statement .

    $default  reduce using rule 25 (statement_list)


State 80

   29 matched_statement: variable ASSIGNOP expression .

    $default  reduce using rule 29 (matched_statement)


State 81

    3 identifier_list: identifier_list . ',' ID
   19 parameter_list: identifier_list . ':' type

    ','  shift, and go to state 9
    ':'  shift, and go to state 100


State 82

   17 arguments: '(' parameter_list . ')'
   20 parameter_list: parameter_list . ';' identifier_list ':' type

    ')'  shift, and go to state 101
    ';'  shift, and go to state 102


State 83

   14 subprogram_header: FUNC ID arguments ':' . standard_type ';'

    INTEGRAL  shift, and go to state 40
    RATIONAL  shift, and go to state 41

    standard_type  go to state 103


State 84

   16 subprogram_header: PROC ID $@1 arguments . ';'

    ';'  shift, and go to state 104


State 85

   13 subprogram_declaration: subprogram_header declarations subprogram_declarations compound_statement .

    $default  reduce using rule 13 (subprogram_declaration)


State 86

    8 range: INUM . '.' '.' INUM

    '.'  shift, and go to state 105


State 87

    7 type: ARRAY '[' range . ']' OF standard_type

    ']'  shift, and go to state 106


State 88

   40 expression_list: expression_list . ',' expression
   49 factor: ID '(' expression_list . ')'

    ')'  shift, and go to state 107
    ','  shift, and go to state 98


State 89

   50 factor: ID '[' expression . ']'

    ']'  shift, and go to state 108


State 90

   53 factor: '(' expression ')' .

    $default  reduce using rule 53 (factor)


State 91

   33 unmatched_statement: IF expression THEN statement .

    $default  reduce using rule 33 (unmatched_statement)


State 92

   26 statement: matched_statement .
   28 matched_statement: IF expression THEN matched_statement . ELSE matched_statement
   34 unmatched_statement: IF expression THEN matched_statement . ELSE unmatched_statement

    ELSE  shift, and go to state 109

    ELSE      [reduce using rule 26 (statement)]
    $default  reduce using rule 26 (statement)


State 93

   42 expression: simple_expression RELOP simple_expression .
   45 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 73

    $default  reduce using rule 42 (expression)


State 94

   45 simple_expression: simple_expression ADDOP term .
   47 term: term . MULOP factor

    MULOP  shift, and go to state 74

    $default  reduce using rule 45 (simple_expression)


State 95

   47 term: term MULOP factor .

    $default  reduce using rule 47 (term)


State 96

   32 matched_statement: WHILE expression DO statement .

    $default  reduce using rule 32 (matched_statement)


State 97

   38 procedure_statement: ID '(' expression_list ')' .

    $default  reduce using rule 38 (procedure_statement)


State 98

   40 expression_list: expression_list ',' . expression

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 110
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 99

   36 variable: ID '[' expression ']' .

    $default  reduce using rule 36 (variable)


State 100

   19 parameter_list: identifier_list ':' . type

    ARRAY     shift, and go to state 39
    INTEGRAL  shift, and go to state 40
    RATIONAL  shift, and go to state 41

    type           go to state 111
    standard_type  go to state 43


State 101

   17 arguments: '(' parameter_list ')' .

    $default  reduce using rule 17 (arguments)


State 102

   20 parameter_list: parameter_list ';' . identifier_list ':' type

    ID  shift, and go to state 6

    identifier_list  go to state 112


State 103

   14 subprogram_header: FUNC ID arguments ':' standard_type . ';'

    ';'  shift, and go to state 113


State 104

   16 subprogram_header: PROC ID $@1 arguments ';' .

    $default  reduce using rule 16 (subprogram_header)


State 105

    8 range: INUM '.' . '.' INUM

    '.'  shift, and go to state 114


State 106

    7 type: ARRAY '[' range ']' . OF standard_type

    OF  shift, and go to state 115


State 107

   49 factor: ID '(' expression_list ')' .

    $default  reduce using rule 49 (factor)


State 108

   50 factor: ID '[' expression ']' .

    $default  reduce using rule 50 (factor)


State 109

   28 matched_statement: IF expression THEN matched_statement ELSE . matched_statement
   34 unmatched_statement: IF expression THEN matched_statement ELSE . unmatched_statement

    BBEGIN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    ID      shift, and go to state 25

    compound_statement   go to state 26
    matched_statement    go to state 116
    unmatched_statement  go to state 117
    variable             go to state 32
    procedure_statement  go to state 33


State 110

   40 expression_list: expression_list ',' expression .

    $default  reduce using rule 40 (expression_list)


State 111

   19 parameter_list: identifier_list ':' type .

    $default  reduce using rule 19 (parameter_list)


State 112

    3 identifier_list: identifier_list . ',' ID
   20 parameter_list: parameter_list ';' identifier_list . ':' type

    ','  shift, and go to state 9
    ':'  shift, and go to state 118


State 113

   14 subprogram_header: FUNC ID arguments ':' standard_type ';' .

    $default  reduce using rule 14 (subprogram_header)


State 114

    8 range: INUM '.' '.' . INUM

    INUM  shift, and go to state 119


State 115

    7 type: ARRAY '[' range ']' OF . standard_type

    INTEGRAL  shift, and go to state 40
    RATIONAL  shift, and go to state 41

    standard_type  go to state 120


State 116

   28 matched_statement: IF expression THEN matched_statement ELSE matched_statement .

    $default  reduce using rule 28 (matched_statement)


State 117

   34 unmatched_statement: IF expression THEN matched_statement ELSE unmatched_statement .

    $default  reduce using rule 34 (unmatched_statement)


State 118

   20 parameter_list: parameter_list ';' identifier_list ':' . type

    ARRAY     shift, and go to state 39
    INTEGRAL  shift, and go to state 40
    RATIONAL  shift, and go to state 41

    type           go to state 121
    standard_type  go to state 43


State 119

    8 range: INUM '.' '.' INUM .

    $default  reduce using rule 8 (range)


State 120

    7 type: ARRAY '[' range ']' OF standard_type .

    $default  reduce using rule 7 (type)


State 121

   20 parameter_list: parameter_list ';' identifier_list ':' type .

    $default  reduce using rule 20 (parameter_list)
